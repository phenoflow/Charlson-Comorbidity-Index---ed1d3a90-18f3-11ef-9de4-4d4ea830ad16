# Caroline Fairhust, Fabiola Martin, Ian Watt, Tim Doran, Martin Bland, William J Brackenbury, 2024.

import sys, csv, re

codes = [{"code":"G618.00","system":"readv2"},{"code":"Gyu6A00","system":"readv2"},{"code":"G65..12","system":"readv2"},{"code":"Gyu6300","system":"readv2"},{"code":"G64..11","system":"readv2"},{"code":"G63z.00","system":"readv2"},{"code":"G663.00","system":"readv2"},{"code":"Gyu6G00","system":"readv2"},{"code":"G67..00","system":"readv2"},{"code":"G674000","system":"readv2"},{"code":"G677200","system":"readv2"},{"code":"G617.00","system":"readv2"},{"code":"Gyu6100","system":"readv2"},{"code":"Gyu6600","system":"readv2"},{"code":"G61..12","system":"readv2"},{"code":"G675.00","system":"readv2"},{"code":"G600.00","system":"readv2"},{"code":"G621.00","system":"readv2"},{"code":"G65z100","system":"readv2"},{"code":"G616.00","system":"readv2"},{"code":"G640.00","system":"readv2"},{"code":"G65zz00","system":"readv2"},{"code":"G65z000","system":"readv2"},{"code":"G64z111","system":"readv2"},{"code":"14AK.00","system":"readv2"},{"code":"G62z.00","system":"readv2"},{"code":"G6z..00","system":"readv2"},{"code":"G668.00","system":"readv2"},{"code":"G683.00","system":"readv2"},{"code":"G65..13","system":"readv2"},{"code":"G656.00","system":"readv2"},{"code":"G671.00","system":"readv2"},{"code":"G64z200","system":"readv2"},{"code":"G64z000","system":"readv2"},{"code":"663e000","system":"readv2"},{"code":"G6X..00","system":"readv2"},{"code":"G61..00","system":"readv2"},{"code":"G65y.00","system":"readv2"},{"code":"G63y000","system":"readv2"},{"code":"G66..12","system":"readv2"},{"code":"Gyu6500","system":"readv2"},{"code":"G661.00","system":"readv2"},{"code":"G6y..00","system":"readv2"},{"code":"G632.00","system":"readv2"},{"code":"G673000","system":"readv2"},{"code":"G667.00","system":"readv2"},{"code":"ZV12512","system":"readv2"},{"code":"G602.00","system":"readv2"},{"code":"G678.00","system":"readv2"},{"code":"G64..00","system":"readv2"},{"code":"G68..00","system":"readv2"},{"code":"G671000","system":"readv2"},{"code":"G682.00","system":"readv2"},{"code":"G677300","system":"readv2"},{"code":"G670.00","system":"readv2"},{"code":"G66..11","system":"readv2"},{"code":"G61z.00","system":"readv2"},{"code":"G610.00","system":"readv2"},{"code":"Gyu6200","system":"readv2"},{"code":"G680.00","system":"readv2"},{"code":"G622.00","system":"readv2"},{"code":"G641.00","system":"readv2"},{"code":"G677400","system":"readv2"},{"code":"G68X.00","system":"readv2"},{"code":"G67z.00","system":"readv2"},{"code":"G63y100","system":"readv2"},{"code":"G64z400","system":"readv2"},{"code":"G673200","system":"readv2"},{"code":"G654.00","system":"readv2"},{"code":"Gyu6400","system":"readv2"},{"code":"G64..12","system":"readv2"},{"code":"G631.12","system":"readv2"},{"code":"G66..13","system":"readv2"},{"code":"662e.00","system":"readv2"},{"code":"G673300","system":"readv2"},{"code":"G63..11","system":"readv2"},{"code":"662M.00","system":"readv2"},{"code":"G64z300","system":"readv2"},{"code":"G61..11","system":"readv2"},{"code":"G606.00","system":"readv2"},{"code":"G666.00","system":"readv2"},{"code":"G604.00","system":"readv2"},{"code":"G614.00","system":"readv2"},{"code":"G61X100","system":"readv2"},{"code":"G677000","system":"readv2"},{"code":"G641000","system":"readv2"},{"code":"G640000","system":"readv2"},{"code":"G674.00","system":"readv2"},{"code":"G6W..00","system":"readv2"},{"code":"G61X000","system":"readv2"},{"code":"G615.00","system":"readv2"},{"code":"G665.00","system":"readv2"},{"code":"ZV12511","system":"readv2"},{"code":"G65z.00","system":"readv2"},{"code":"G677.00","system":"readv2"},{"code":"G641.11","system":"readv2"},{"code":"G677100","system":"readv2"},{"code":"G679.00","system":"readv2"},{"code":"G67y.00","system":"readv2"},{"code":"G631.00","system":"readv2"},{"code":"G662.00","system":"readv2"},{"code":"G63..00","system":"readv2"},{"code":"G60z.00","system":"readv2"},{"code":"Gyu6F00","system":"readv2"},{"code":"G650.00","system":"readv2"},{"code":"14A7.12","system":"readv2"},{"code":"G620.00","system":"readv2"},{"code":"14AF.00","system":"readv2"},{"code":"G671z00","system":"readv2"},{"code":"G630.00","system":"readv2"},{"code":"G64z100","system":"readv2"},{"code":"G60..00","system":"readv2"},{"code":"G670.11","system":"readv2"},{"code":"G601.00","system":"readv2"},{"code":"G676.00","system":"readv2"},{"code":"G664.00","system":"readv2"},{"code":"G64..13","system":"readv2"},{"code":"G64z.11","system":"readv2"},{"code":"G623.00","system":"readv2"},{"code":"G631.11","system":"readv2"},{"code":"G673100","system":"readv2"},{"code":"G62..00","system":"readv2"},{"code":"G605.00","system":"readv2"},{"code":"G671100","system":"readv2"},{"code":"G681.00","system":"readv2"},{"code":"G65..00","system":"readv2"},{"code":"G64z.12","system":"readv2"},{"code":"G653.00","system":"readv2"},{"code":"G66..00","system":"readv2"},{"code":"G613.00","system":"readv2"},{"code":"G60X.00","system":"readv2"},{"code":"G64z.00","system":"readv2"},{"code":"G61X.00","system":"readv2"},{"code":"G63y.00","system":"readv2"},{"code":"G651.00","system":"readv2"},{"code":"14A7.11","system":"readv2"},{"code":"G611.00","system":"readv2"},{"code":"G634.00","system":"readv2"},{"code":"G612.00","system":"readv2"},{"code":"G6...00","system":"readv2"},{"code":"G660.00","system":"readv2"},{"code":"G603.00","system":"readv2"},{"code":"G650.11","system":"readv2"},{"code":"G633.00","system":"readv2"},{"code":"G676000","system":"readv2"},{"code":"G651000","system":"readv2"},{"code":"G63..12","system":"readv2"},{"code":"G68W.00","system":"readv2"}];
REQUIRED_CODES = 1;
with open(sys.argv[1], 'r') as file_in, open('charlson-comorbidity-index-potential-cases.csv', 'w', newline='') as file_out:
    csv_reader = csv.DictReader(file_in)
    csv_writer = csv.DictWriter(file_out, csv_reader.fieldnames + ["cerebrovascular-charlson-comorbidity-index---primary-identified"])
    csv_writer.writeheader();
    codes_identified = 0;
    for row in csv_reader:
        newRow = row.copy();
        for cell in row:
            # Iterate cell lists (e.g. codes)
            for item in re.findall(r'\(([^,]*)\,', row[cell]):
                if(item in list(map(lambda code: code['code'], codes))): codes_identified+=1;
                if(codes_identified>=REQUIRED_CODES):
                    newRow["cerebrovascular-charlson-comorbidity-index---primary-identified"] = "CASE";
                    break;
            if(codes_identified>=REQUIRED_CODES): break;
        if(codes_identified<REQUIRED_CODES):
            newRow["cerebrovascular-charlson-comorbidity-index---primary-identified"] = "UNK";
        codes_identified=0;
        csv_writer.writerow(newRow)
